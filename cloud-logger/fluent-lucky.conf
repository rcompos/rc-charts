# Fluent Configuration
<system>
  # prevents printing secrets (debug) in stdout of FluentD
  suppress_config_dump
  # log_level info
  # log_level debug
  <log>
    format json
  </log>
  # workers 8
</system>

# TLS enabled
# <source>
#   @type http
#   port 9880
#   bind 0.0.0.0
#   <transport tls>
#     cert_path /etc/pki/fluentd.crt
#     private_key_path /etc/pki/fluentd.key
#     # private_key_passphrase YOUR_PASSPHRASE
#     client_cert_auth false
#   </transport>
# </source>

# # TLS enabled
# <source>
#   @type forward
#   <transport tls>
#     cert_path /etc/pki/fluentd.crt
#     private_key_path /etc/pki/fluentd.key
#     # private_key_passphrase YOUR_PASSPHRASE
#     client_cert_auth false
#   </transport>
# </source>

<source>
  @type http
  port 9880
  bind 0.0.0.0
  body_size_limit 32m
  keepalive_timeout 10s
  # <transport tls>
  #   # version TLSv1_2
  #   # ciphers ALL:!aNULL:!eNULL:!SSLv2
  #   # insecure false
  #   # # For Cert generated
  #   # ca_cert_path /etc/pki/fluehtd-auto.crt
  #   # ca_private_key_path /etc/pki/fluentd.key
  #   # ca_private_key_passphrase "ca_passphrase"
  #   cert_path /etc/pki/fluentd.crt
  #   private_key_path /etc/pki/fluentd.key
  #   client_cert_auth false
  # </transport>
</source>

# <source>
#   @type http_healthcheck
#   port 8080
#   bind 0.0.0.0
# </source>

<match vin.**>
  @type copy

  <store>
    @type elasticsearch
    # host localhost
    # index_name         "#{ENV['ELASTICSEARCH_INDEX_NAME'] || 'cloud-logger' }"
    # index_name         cloud-logger.${tag}
    # index_name         cloud-logger.${tag}.%Y%m%d
    # index_name         cloud-logger-%Y.%m.%d
    index_name         cloud-logger-%Y.%m.%d
    host               "#{ENV['ELASTICSEARCH_HOST'] || 'es-cloud-logs.elasticsearch.svc' }"
    user               "#{ENV['ELASTICSEARCH_USER'] || 'elastic' }"
    password           "#{ENV['ELASTICSEARCH_PASSWORD'] || 'changeme' }"
    port               "#{ENV['ELASTICSEARCH_PORT'] || '9200' }"
    scheme             "#{ENV['ELASTICSEARCH_SCHEME'] || 'https' }"
    ssl_verify         "#{ENV['ELASTICSEARCH_SSL_VERIFY_FALSE'] || 'false' }"
    include_tag_key    true
    tag_key            @log_name
    # logstash_format    true # Supercedes index_name
    flush_interval     "#{ENV['ELASTICSEARCH_FLUSH_INTERVAL'] || '10s' }"
    flush_thread_count "#{ENV['ELASTICSEARCH_FLUSH_THREAD_COUNT'] || '8' }"
    # Use buffer if ${tag} being used
    # Time placeholder needs to set up tag and time in chunk_keys.
    # Also, it needs to specify timekey for time slice of chunk:
    # <buffer tag, time>
    <buffer tag,time>
      @type memory
      # @type file
      # path              "#{ENV['ELASTICSEARH_PATH'] || '/fluentd/log/elasticsearch' }"     #(required; ex: /path/to/logs)
      timekey           "#{ENV['ELASTICSEARCH_TIMEKEY'] || '300s' }"             #(required; ex: 3600)
      timekey_wait      "#{ENV['ELASTICSEARCH_TIMEKEY_WAIT'] || '60s' }"          #(required; ex: 5m)
      # # chunk_limit_size 256m
      # chunk_limit_size 512m
    </buffer>
  </store>

  <store>
    @type s3
    path logs/${tag}/%Y/%m/%d/
    #time_format   <format string>           #(optional; default is ISO-8601)
    time_slice_format %Y%m%d%H
    s3_bucket     "#{ENV['S3_BUCKET'] || 'cloud-logger' }"   #(required)
    s3_region     "#{ENV['S3_REGION'] || 'us-west-2' }"   #(required; ex: s3-us-west-1.amazonaws.com)
    ###  AWS Key ID and Secret Key - Local Dev  ###
    # aws_key_id    "#{ENV['AWS_KEY_ID']}"
    # aws_sec_key   "#{ENV['AWS_SEC_KEY']}"
    #s3_object_key_format <format string>    #(optional; default="%{path}%{time_slice}_%{index}.%{file_extension}")
    s3_object_key_format %{path}%{time_slice}_%{index}.%{file_extension} #(optional; default="%{path}%{time_slice}_%{index}.%{file_extension}")
    #auto_create_bucket <true/false>         #(optional; default=true)
    #check_apikey_on_start <true/false>      #(optional; default=true)
    #proxy_uri <proxy uri string>            #(optional)
    flush_thread_count "#{ENV['S3_FLUSH_THREAD_COUNT'] || '8' }"
    <buffer tag,time>
      @type file
      path              "#{ENV['S3_PATH'] || '/fluentd/log/s3' }"     #(required; ex: /path/to/logs)
      timekey           "#{ENV['S3_TIMEKEY'] || '3600' }"             #(required; ex: 3600)
      timekey_wait      "#{ENV['S3_TIMEKEY_WAIT'] || '5m' }"          #(required; ex: 5m)
      chunk_limit_size  "#{ENV['S3_CHUNK_LIMIT_SIZE'] || '256m' }"    #(required; ex: 256m)
    </buffer>
    # <buffer>
    #  @type memory
    #  timekey 300  # 5 minutes
    #  timekey_wait 60s
    #  chunk_limit_size 256m
    # </buffer>
  </store>

</match>

# <match **>
#   @type stdout
# </match>
